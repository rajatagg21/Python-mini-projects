import kotlin.test.Test
import kotlin.test.assertEquals

class NumberMaskingTest {

    @Test
    fun testPositiveCases() {
        val testCases = mapOf(
            "1000.000" to "<num>",
            "$1,000" to "<num>",
            "1,00,000.99" to "<num>",
            "=1000.000" to "<num>",
            "1,000/-" to "<num>",
            "10.89%" to "<num>",
            "â‚¹1,000/-" to "<num>",
            "abc 1,000.00 xyz" to "abc <num> xyz",
            "=$10,000.50" to "=<num>",
            "Total is =1000.000" to "Total is <num>"
        )

        for ((input, expected) in testCases) {
            assertEquals(expected, maskNumbers(input), "Failed for: '$input'")
        }
    }

    @Test
    fun testNegativeCases() {
        val negativeCases = listOf(
            "abc1000",        // attached to letters
            "1000abc",        // suffix word characters
            "1,,000",         // invalid commas
            "1.000.000",      // multiple decimals
            "1,00,000,000,000,000" // excessive commas
        )

        for (input in negativeCases) {
            assertEquals(input, maskNumbers(input), "Incorrectly masked: '$input'")
        }
    }
}
